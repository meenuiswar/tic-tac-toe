{"version":3,"sources":["components/Sqaure.js","actions/nextMove.js","actions/reset.js","actions/calculateWinner.js","actions/resetWinner.js","components/Board.js","reducers/XOReducer.js","reducers/calculateWinnerReducer.js","reducers/index.js","index.js"],"names":["Square","this","props","value","width","height","x1","y1","x2","y2","stroke","stroke-width","cx","cy","r","fill","borderClass","index","className","onClick","getValue","React","Component","nextMove","i","type","payload","reset","calcWinner","squares","resetWinner","Board","winner","clearHistory","currentState","length","calculateWinner","status","isGameDraw","xIsNext","renderSquare","class","onUndo","disabled","canUndo","onRedo","canRedo","connect","state","present","past","future","dispatch","bindActionCreators","UndoActionCreators","undo","redo","undoableXOReducer","undoable","Array","action","slice","lines","a","b","c","reducer","combineReducers","XOReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b842c83c.chunk.js","sourcesContent":["import React from \"react\";\r\nclass Square extends React.Component {\r\n  getValue() {\r\n    let value;\r\n    if (this.props.value === \"X\" || this.props.value === \"x\") {\r\n      value = (\r\n        <svg width=\"100\" height=\"100\">\r\n          <line x1=\"20\" y1=\"20\" x2=\"80\" y2=\"80\" stroke=\"red\" stroke-width=\"5\" />\r\n          <line x1=\"80\" y1=\"20\" x2=\"20\" y2=\"80\" stroke=\"red\" stroke-width=\"5\" />\r\n        </svg>\r\n      );\r\n    } else if (this.props.value === \"O\" || this.props.value === \"o\") {\r\n      value = (\r\n        <svg width=\"100\" height=\"100\">\r\n          <circle\r\n            cx=\"50\"\r\n            cy=\"50\"\r\n            r=\"30\"\r\n            stroke=\"#edc913\"\r\n            stroke-width=\"5\"\r\n            fill=\"none\"\r\n          />\r\n        </svg>\r\n      );\r\n    } else value = \"\";\r\n\r\n    return value;\r\n  }\r\n  render() {\r\n    let borderClass = \"square border\" + this.props.index;\r\n\r\n    return (\r\n      <button className={borderClass} onClick={() => this.props.onClick()}>\r\n        {this.getValue()}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","const nextMove = i => {\r\n  return {\r\n    type: \"NEXT_MOVE\",\r\n    payload: i\r\n  };\r\n};\r\n\r\nexport default nextMove;\r\n","const reset = () => {\r\n  return {\r\n    type: \"RESET\"\r\n  };\r\n};\r\n\r\nexport default reset;\r\n","const calcWinner = squares => {\r\n  return {\r\n    type: \"CALCULATE_WINNER\",\r\n    payload: squares\r\n  };\r\n};\r\n\r\nexport default calcWinner;\r\n","const resetWinner = () => {\r\n  return {\r\n    type: \"RESET_WINNER\"\r\n  };\r\n};\r\n\r\nexport default resetWinner;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/index.css\";\r\nimport Square from \"./Sqaure\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport nextMove from \"../actions/nextMove\";\r\nimport reset from \"../actions/reset\";\r\nimport calculateWinner from \"../actions/calculateWinner\";\r\nimport resetWinner from \"../actions/resetWinner\";\r\nimport { ActionCreators as UndoActionCreators } from \"redux-undo\";\r\n\r\nclass Board extends Component {\r\n  onClick = i => {\r\n    if (this.props.winner === \"\") {\r\n      this.props.nextMove(i);\r\n    }\r\n  };\r\n  reset = () => {\r\n    this.props.resetWinner();\r\n    this.props.reset();\r\n    this.props.clearHistory();\r\n  };\r\n  isGameDraw() {\r\n    for (let i = 0; i < this.props.currentState.squares.length; i++) {\r\n      if (this.props.currentState.squares[i] == null) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.currentState.squares[i]}\r\n        onClick={() => this.onClick(i)}\r\n        index={i}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    this.props.calculateWinner(this.props.currentState.squares);\r\n    const winner = this.props.winner;\r\n    let status;\r\n    if (winner !== \"\") {\r\n      status = \"Winner is :\";\r\n      status = status + winner;\r\n    } else {\r\n      const isDraw = this.isGameDraw();\r\n      if (isDraw) {\r\n        status = \"This Game is a Draw\";\r\n      } else {\r\n        status = \"Next Player:\";\r\n        status = status + (this.props.currentState.xIsNext ? \"X\" : \"O\");\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"game marginTop\">\r\n        <div className=\"heading\">TIC-TAC-TOE</div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board\">\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n        <div class=\"buttons\">\r\n          <button\r\n            className=\"buttonStyle\"\r\n            onClick={this.props.onUndo}\r\n            disabled={!this.props.canUndo}\r\n          >\r\n            Undo\r\n          </button>\r\n          <button\r\n            className=\"buttonStyle marginLeft\"\r\n            onClick={() => this.reset()}\r\n          >\r\n            Reset\r\n          </button>\r\n          <button\r\n            className=\"buttonStyle marginLeft\"\r\n            onClick={this.props.onRedo}\r\n            disabled={!this.props.canRedo}\r\n          >\r\n            Redo\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentState: state.currentState.present,\r\n    winner: state.winner.winner,\r\n    canUndo: state.currentState.past.length > 0,\r\n    canRedo: state.currentState.future.length > 0\r\n  };\r\n}\r\nfunction matchDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      nextMove: nextMove,\r\n      reset: reset,\r\n      calculateWinner: calculateWinner,\r\n      resetWinner: resetWinner,\r\n      onUndo: UndoActionCreators.undo,\r\n      onRedo: UndoActionCreators.redo,\r\n      clearHistory: UndoActionCreators.clearHistory\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Board);\r\n","import undoable from \"redux-undo\";\r\n\r\nconst XOReducer = (\r\n  state = {\r\n    squares: Array(9).fill(null),\r\n    xIsNext: true\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"NEXT_MOVE\":\r\n      const squares = state.squares.slice();\r\n      if (squares[action.payload] === null) {\r\n        squares[action.payload] = state.xIsNext ? \"X\" : \"O\";\r\n        return {\r\n          squares: squares,\r\n          xIsNext: !state.xIsNext\r\n        };\r\n      }\r\n      return state;\r\n    case \"RESET\":\r\n      return {\r\n        squares: Array(9).fill(null),\r\n        xIsNext: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst undoableXOReducer = undoable(XOReducer);\r\n\r\nexport default undoableXOReducer;\r\n","const calculateWinner = (state = { winner: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"CALCULATE_WINNER\":\r\n      const squares = action.payload;\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n      ];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (\r\n          squares[a] &&\r\n          squares[a] === squares[b] &&\r\n          squares[a] === squares[c]\r\n        ) {\r\n          return { winner: squares[a] };\r\n        }\r\n      }\r\n      return state;\r\n\r\n    case \"RESET_WINNER\":\r\n      return { winner: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default calculateWinner;\r\n","import XOReducer from \"./XOReducer\";\r\nimport calculateWinner from \"./calculateWinnerReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst reducer = combineReducers({\r\n  currentState: XOReducer,\r\n  winner: calculateWinner\r\n});\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport Board from \"./components/Board\";\nimport reducer from \"./reducers/\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(reducer);\nReactDOM.render(\n  <Provider store={store}>\n    <Board />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}